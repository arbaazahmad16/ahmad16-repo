pipeline {
    agent any

    environment {
        BACKUP_DIR = '/var/lib/jenkins_backup'  // Directory for backup
        S3_BUCKET = 'arbaaz-s3-bucket-9f9e514c9302f49a' // S3 bucket
        BACKUP_FILE = "jenkins_backup_${env.BUILD_ID}.tar.gz"
        AWS_REGION = 'us-east-1'                // Set your AWS region
    }

    stages {
        stage('Backup Jenkins Configuration') {
            steps {
                script {
                    echo "Starting Jenkins backup..."
                    
                    // Create backup directory if not exists
                    sh """
                        mkdir -p ${BACKUP_DIR}
                        tar -czf ${BACKUP_DIR}/${BACKUP_FILE} /var/lib/jenkins
                    """
                    
                    echo "Backup created at ${BACKUP_DIR}/${BACKUP_FILE}"
                }
            }
        }

        stage('Upload Backup to S3') {
            steps {
                script {
                    echo "Uploading backup to S3..."
                    
                    // Upload backup to S3 bucket
                    sh """
                        aws s3 cp ${BACKUP_DIR}/${BACKUP_FILE} s3://${S3_BUCKET}/backups/${BACKUP_FILE} --region ${AWS_REGION}
                    """
                    
                    echo "Backup uploaded to S3 bucket: s3://${S3_BUCKET}/backups/${BACKUP_FILE}"
                }
            }
        }
        stage("Notification-Slack"){
		steps{
			slackSend baseUrl: 'https://hooks.slack.com/services/',
	                channel: 'jenkins-pipeline-demo',
	                color: 'good',
	                message: 'Jenkins backup completed successfully',
	                teamDomain: 'My-AWS-Slackworkspace.slack.com',
	                tokenCredentialId: 'slack-demo',
	                username: 'javahomecloud'
		}
	}
    }

    post {
        always {
            // Clean up backup file from local machine
            sh """
                rm -f ${BACKUP_DIR}/${BACKUP_FILE}
            """
            echo "Cleaned up local backup file"
        }

        success {
            echo "Backup and upload completed successfully!"
        }

        failure {
            echo "Backup or upload failed. Check the logs for more information."
        }
    }
}
